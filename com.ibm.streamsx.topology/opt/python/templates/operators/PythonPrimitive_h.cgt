/*
 * # Licensed Materials - Property of IBM
 * # Copyright IBM Corp. 2015  
 */

#include "splpy_pyop.h"

using namespace streamsx::topology;

<%SPL::CodeGen::headerPrologue($model);%>

class MY_OPERATOR : public MY_BASE_OPERATOR, public SplpyPrimitiveOp
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR(); 

  // Notify pending shutdown
  void prepareToShutdown(); 

  // Tuple processing for non-mutating ports
  void process(Tuple const & tuple, uint32_t port);

  void convertAndSubmit(uint32_t port, PyObject *data);

private:
  // Members
    SplpyPyOp *pyop_;


<%if ($model->getNumberOfInputPorts() != 0) {%>
    PyObject *pyinputfns_;
    PyObject *pyInNames_; // port 0
<%  for (my $p = 1; $p < $model->getNumberOfInputPorts(); $p++) { %>
    PyObject *pyInNames_<%=$p%>;
<%}}%>
}; 

<%SPL::CodeGen::headerEpilogue($model);%>

