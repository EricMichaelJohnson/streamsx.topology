<%
# Generates a function in an operator that converts a Python
# tuple to an SPL tuple for a given port.
#
# $oport must be set on entry to required output port
# $iport can be set to automatically copy input attributes to
# output attributes when the Python tuple does not supply a value.

  my $itypeparam = "";
  if (defined $iport) {
     $itypeparam = ", " . $iport->getCppTupleType() . " const & ituple";
  }
%>
 
void MY_OPERATOR::fromPythonToPort<%=$oport->getIndex()%>(PyObject *pyTuple <%=$itypeparam%>) {

  <%=$oport->getCppTupleType()%> otuple;

  Py_ssize_t frs = PyTuple_GET_SIZE(pyTuple); 
    
<%
  if (defined $iport) {
    print 'bool setAttr = false;';
  }

  for (my $ai = 0; $ai < $oport->getNumberOfAttributes(); ++$ai) {
    
    my $attribute = $oport->getAttributeAt($ai);
    my $name = $attribute->getName();
    my $atype = $attribute->getSPLType();
    splToPythonConversionCheck($atype);
    
    if (defined $iport) {
             print 'setAttr = false;';
    }
%>
    if (<%=$ai%> < frs) {
         // Value from the Python function
         PyObject *pyAttrValue = PyTuple_GET_ITEM(pyTuple, <%=$ai%>);
<%
    # A returned value from the Python function is mapped as follows:
    # - None in Python tuple is mapped:
    #   - for all types, to matching input, or the default value
    # - None in Python dict is mapped:
    #   - for optional types, to SPL null (the default value)
    #   - for non-optional types, to matching input, or the default value.
    #
    # A returned dict has already been converted to a tuple,
    # and a None in the dict has been converted to Python SPL null
    # so it can be handled correctly for an optional type.
    if (hasOptionalTypesSupport() && SPL::CodeGen::Type::isOptional($atype)) {
         # For optional types map Python SPL null to default value of null.
%>
         if (!SplpyGeneral::isNone(pyAttrValue)) {
             if (!SplpyGeneral::isSplNull(pyAttrValue))
<%
    } else {
         # For non-optional types treat Python SPL null the same as None.
%>
         if (!SplpyGeneral::isNone(pyAttrValue) &&
             !SplpyGeneral::isSplNull(pyAttrValue)) {
<%
    }
%>
                  streamsx::topology::pySplValueFromPyObject(
                               otuple.get_<%=$name%>(), pyAttrValue);
<%
    if (defined $iport) {
             print 'setAttr = true;';
    }
%>
      }
   }
<%
    if (defined $iport) {
    
    # Only copy attributes across if they match on name and type
    my $matchInputAttr = $iport->getAttributeByName($name);
    if (defined $matchInputAttr) {
       if ($matchInputAttr->getSPLType() eq $attribute->getSPLType()) {
%>
    if (!setAttr) {
      // value from the input attribute
      otuple.set_<%=$name%>(ituple.get_<%=$name%>());
    }
<%
      }
    }
   }
%>
         
<%
}
 %>

  Py_BEGIN_ALLOW_THREADS
  submit(otuple, <%=$oport->getIndex()%>);
  Py_END_ALLOW_THREADS
}
