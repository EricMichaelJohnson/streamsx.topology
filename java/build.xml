<project name="streamsx.topology.java" default="all" >
    <description>
        Build the Streams Java functional api.
    </description>

  <import file="../common-build.xml"/>

  <property name="src" location="src"/>
  <property name="classes" location="classes"/>
  <property name="runtime.src" location="runtime/src"/>
  <property name="runtime.classes" location="runtime/classes"/>
  <property name="execute.src" location="execute/src"/>
  <property name="execute.classes" location="execute/classes"/>
  <property name="jarname" value="com.ibm.streamsx.topology.jar"/>
  <property name="jar" location="${tk.lib}/${jarname}"/>

  <property name="jar.core" location="${tk.lib}/com.ibm.streamsx.topology.core.jar"/>
  <property name="jar.runtime" location="${tk.lib}/com.ibm.streamsx.topology.runtime.jar"/>
  <property name="jar.execute" location="${tk.lib}/com.ibm.streamsx.topology.execute.jar"/>

  <path id="compile.classpath">
    <path refid="streams.classpath"/>
    <path refid="tk.classpath"/>
    <path location="${jar.runtime}" />
    <pathelement location="${junit.jar}"/>
  </path>

  <path id="compile.execute.tk.classpath">
    <path location="${jar.runtime}" />
  </path>

  <path id="compile.runtime.classpath">
  </path>

  <path id="compile.execute.classpath">
    <path refid="streams.classpath"/>
    <path refid="compile.execute.tk.classpath"/>
  </path>

  <path id="compile.pure.classpath">
    <path location="${jar.runtime}" />
    <path refid="gson.classpath" />
    <path refid="httpclient.classpath"/>
    <path refid="compress.classpath"/>
  </path>

  <target name="all" depends="jar"/>


  <target name="init">
    <mkdir dir="${classes}"/>
    <mkdir dir="${runtime.classes}"/>
    <mkdir dir="${execute.classes}"/>
    <mkdir dir="${tk.lib}"/>
  </target>

  <!-- Compile of classes that do not depend on STREAMS_INSTALL
       to allow local generation of SPL code and submission to
       a build farm.
              ${cisxt}/spi/*.java
              ${cisxt}/spi/builder/*.java
   -->
  <property name="cisxt" value="com/ibm/streamsx/topology"/>
  <property name="cisxr" value="com/ibm/streamsx/rest"/>
  <property name="pure.source"
       value="
              ${cisxt}/internal/gson/*.java
              ${cisxt}/generator/**
              ${cisxt}/context/remote/*.java
              ${cisxt}/internal/context/remote/*.java
              ${cisxt}/internal/streaminganalytics/*.java

              ${cisxt}/jobconfig/*.java
              ${cisxt}/builder/*.java
              ${cisxt}/internal/streams/*.java

              ${cisxr}/*.java
              "
  />
  <target name="compile.pure" depends="init,jar.runtime">
    <javac debug="true" includeantruntime="no"
       srcdir="${src}" 
       destdir="${classes}"
       classpathref="compile.pure.classpath"
       includes="${pure.source}"
    />
    <copy toDir="${classes}">
      <fileset dir="${src}" includes="**/*.properties"/>
    </copy>
  </target>

  <target name="compile" depends="init,jar.runtime">
    <javac debug="true" includeantruntime="no"
       srcdir="${src}" 
       destdir="${classes}"
       classpathref="compile.classpath"
       excludes="${pure.source}"
       />
    <ant dir="../scala" target="all" useNativeBasedir="true" inheritAll="no"/>
  </target>

  <target name="compile.runtime" depends="init">
    <javac debug="true" includeantruntime="no"
       srcdir="${runtime.src}" 
       destdir="${runtime.classes}"
       classpathref="compile.runtime.classpath"
       />
  </target>


  <target name="compile.execute" depends="jar.runtime">
    <javac debug="true" includeantruntime="no"
       srcdir="${execute.src}" 
       destdir="${execute.classes}"
       classpathref="compile.execute.classpath"
       />
  </target>

  <target name="jar" depends="compile,jar.core,jar.runtime.update,jar.execute">
  <manifestclasspath property="jar.classpath" jarfile="${jar}">
     <classpath>
       <path refid="tk.classpath"/>
       <fileset dir="${tk.opt}/slf4j-1.7.5">
          <include name="*.jar"/>
       </fileset>
     </classpath>
  </manifestclasspath>
    <jar destfile="${jar}" filesonly="true">
       <manifest>
          <attribute name="Class-Path" value="${jar.classpath}"/>
       </manifest>
    <fileset dir="${classes}" excludes="**/*$StreamsModel.*"/>
    <fileset dir="${runtime.classes}"/>
    <fileset dir="${execute.classes}" excludes="**/*$StreamsModel.*"/>
    <fileset dir="${src}" excludes="com/ibm/streamsx/topology/internal/**"/>
    <fileset dir="${src}" includes="com/ibm/streamsx/topology/internal/messages/*.properties"/>
    </jar>
  </target>

  <target name="jar.core">
  <manifestclasspath property="jar.core.classpath" jarfile="${jar.core}">
     <classpath>
       <path refid="tk.classpath"/>
       <fileset dir="${tk.opt}/slf4j-1.7.5">
          <include name="*.jar"/>
       </fileset>
     </classpath>
  </manifestclasspath>
    <jar destfile="${jar.core}" filesonly="true">
       <manifest>
          <attribute name="Class-Path" value="${jar.core.classpath}"/>
       </manifest>
    <fileset dir="${classes}">
       <exclude name="com/ibm/streamsx/topology/tuple/*.class"/>
       <exclude name="com/ibm/streamsx/topology/json/JSONStreams$*.class"/>
       <exclude name="com/ibm/streamsx/topology/internal/**/*TopoRuntime.class"/>
    </fileset>
    <fileset dir="${src}" excludes="com/ibm/streamsx/topology/internal/**"/>
    <fileset dir="${src}" includes="com/ibm/streamsx/topology/internal/messages/*.properties"/>
    </jar>
  </target>

  <target name="jar.runtime" depends="compile.runtime">
    <jar destfile="${jar.runtime}" filesonly="true">
    <fileset dir="${runtime.classes}"/>
    </jar>
  </target>
  <target name="jar.runtime.update" depends="compile,jar.runtime">
    <jar destfile="${jar.runtime}" filesonly="true" update="true">
    <fileset dir="${classes}">
       <include name="com/ibm/streamsx/topology/tuple/*.class"/>
       <include name="com/ibm/streamsx/topology/json/JSONStreams$*.class"/>
       <include name="com/ibm/streamsx/topology/internal/**/*TopoRuntime.class"/>
    </fileset>
    </jar>
  </target>

  <target name="jar.execute" depends="compile.execute">
  <manifestclasspath property="jar.execute.classpath" jarfile="${jar.execute}">
     <classpath>
       <path refid="compile.execute.tk.classpath"/>
     </classpath>
  </manifestclasspath>
    <jar destfile="${jar.execute}" filesonly="true">
       <manifest>
          <attribute name="Class-Path" value="${jar.execute.classpath}"/>
       </manifest>
    <fileset dir="${execute.classes}"/>
    </jar>
  </target>

  <target name="clean" >
    <delete dir="${classes}"/>
    <delete dir="${runtime.classes}"/>
    <delete dir="${execute.classes}"/>
    <delete dir="${tk.lib}"/>
  </target>
</project>
